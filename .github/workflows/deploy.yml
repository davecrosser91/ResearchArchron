name: Deploy to DigitalOcean

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers on tags like v1.0.0, v1.2.3, etc.
  workflow_dispatch:  # Allows manual trigger from GitHub UI

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup and Deploy to DigitalOcean
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Create deployment directory if it doesn't exist
            if [ ! -d "/root/ResearchArchron" ]; then
              echo "🎉 First deployment - setting up repository..."
              cd /root
              git clone https://github.com/davecrosser91/ResearchArchron.git
              cd ResearchArchron
            else
              echo "📥 Updating existing deployment..."
              cd /root/ResearchArchron

              # Stop and remove ALL archon containers (even orphaned ones)
              echo "🛑 Stopping all archon services..."
              docker compose down || true
              docker stop archon-server archon-mcp archon-ui || true
              docker rm archon-server archon-mcp archon-ui || true
            fi

            # Pull latest changes from main branch (force to override any local changes)
            echo "📥 Fetching latest code from main..."
            git fetch --all --tags
            git reset --hard origin/main
            git clean -fd

            # Verify we have the latest code
            echo "📋 Current commit:"
            git log --oneline -1

            # Create/Update .env file with latest secrets (in root directory for docker-compose)
            cat > .env << EOF
            SUPABASE_URL=${{ secrets.SUPABASE_URL }}
            SUPABASE_SERVICE_KEY=${{ secrets.SUPABASE_SERVICE_KEY }}
            OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
            EOF

            # Remove ALL Docker images to force fresh build
            echo "🧹 Cleaning Docker cache..."
            docker system prune -af --volumes || true

            # Build and start services with no cache
            echo "🏗️ Building fresh images (no cache)..."
            docker compose build --no-cache --pull

            echo "🚀 Starting services..."
            docker compose up -d

            echo "✅ Deployment complete!"
            docker compose ps

      - name: Verify deployment
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /root/ResearchArchron

            echo "🔍 Checking service health..."
            sleep 10

            if docker compose ps | grep -q "Up"; then
              echo "✅ Services are running"
              docker compose ps
            else
              echo "❌ Services failed to start"
              docker compose logs --tail=50
              exit 1
            fi

      - name: Notify deployment status
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "✅ Deployment successful for tag ${{ github.ref_name }}"
          else
            echo "❌ Deployment failed for tag ${{ github.ref_name }}"
          fi
